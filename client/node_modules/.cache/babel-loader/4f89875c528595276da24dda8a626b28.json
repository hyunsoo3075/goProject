{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\hyunsoo3075\\\\Desktop\\\\HW\\\\GoPractice\\\\goproj\\\\client\\\\src\\\\components\\\\single-menu-item.component.js\";\nimport 'bootstrap/dist/css/bootstrap.css';\nimport { Card, ListGroupItem, ListGroup } from 'react-bootstrap';\nimport React from 'react';\nimport \"./orders.css\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst Menu = _ref => {\n  let {\n    menuData,\n    updateItem,\n    updateNewOrder\n  } = _ref;\n  return (\n    /*#__PURE__*/\n    //todo find a way to update parents dish state from this child component\n    _jsxDEV(\"div\", {\n      className: \"cardContainer\",\n      onClick: () => updateCurrentDish(),\n      children: /*#__PURE__*/_jsxDEV(Card, {\n        style: {\n          width: '18rem'\n        },\n        children: [/*#__PURE__*/_jsxDEV(Card.Img, {\n          variant: \"top\",\n          src: \"holder.js/100px180?text=Image cap\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 15,\n          columnNumber: 17\n        }, this), /*#__PURE__*/_jsxDEV(Card.Body, {\n          children: [/*#__PURE__*/_jsxDEV(Card.Title, {\n            children: menuData !== undefined && menuData.dish\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 17,\n            columnNumber: 21\n          }, this), /*#__PURE__*/_jsxDEV(Card.Text, {\n            children: menuData !== undefined && menuData.description\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 18,\n            columnNumber: 21\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 16,\n          columnNumber: 17\n        }, this), /*#__PURE__*/_jsxDEV(ListGroup, {\n          className: \"list-group-flush\",\n          children: [/*#__PURE__*/_jsxDEV(ListGroupItem, {\n            children: [\"location: \", menuData !== undefined && menuData.zipcode]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 23,\n            columnNumber: 25\n          }, this), /*#__PURE__*/_jsxDEV(ListGroupItem, {\n            children: [\"Chef: \", menuData !== undefined && menuData.chef]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 24,\n            columnNumber: 25\n          }, this), /*#__PURE__*/_jsxDEV(ListGroupItem, {\n            children: menuData !== undefined && menuData.price\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 25,\n            columnNumber: 25\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 22,\n          columnNumber: 21\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 14,\n        columnNumber: 13\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 13,\n      columnNumber: 9\n    }, this)\n    /* <Row>\r\n        <Col>Dish:{ menuData !== undefined && orderData.dish}</Col>\r\n        <Col>Price: ${menuData !== undefined && orderData.price}</Col>\r\n        \r\n        {/* <Col><Button onClick={() => changeWaiter()}>change waiter</Button></Col>\r\n        <Col><Button onClick={() => changeOrder()}>change order</Button></Col>\r\n    </Row> */\n\n  );\n\n  function updateCurrentDish() {\n    updateNewOrder(true);\n    updateItem({\n      \"dish\": menuData.dish,\n      \"zipcode:\": menuData.zipcode\n    });\n    console.log(\"zipCode updated with \" + menudata);\n  }\n};\n\n_c = Menu;\nexport default Menu;\n\nvar _c;\n\n$RefreshReg$(_c, \"Menu\");","map":{"version":3,"sources":["C:/Users/hyunsoo3075/Desktop/HW/GoPractice/goproj/client/src/components/single-menu-item.component.js"],"names":["Card","ListGroupItem","ListGroup","React","Menu","menuData","updateItem","updateNewOrder","updateCurrentDish","width","undefined","dish","description","zipcode","chef","price","console","log","menudata"],"mappings":";AAAA,OAAO,kCAAP;AAEA,SAAQA,IAAR,EAAcC,aAAd,EAA6BC,SAA7B,QAA8C,iBAA9C;AAEA,OAAOC,KAAP,MAAkB,OAAlB;AAEA,OAAO,cAAP;;;AAEA,MAAMC,IAAI,GAAG,QAA4C;AAAA,MAA3C;AAACC,IAAAA,QAAD;AAAWC,IAAAA,UAAX;AAAuBC,IAAAA;AAAvB,GAA2C;AAErD;AAAA;AACI;AACA;AAAK,MAAA,SAAS,EAAC,eAAf;AAA+B,MAAA,OAAO,EAAE,MAAMC,iBAAiB,EAA/D;AAAA,6BACI,QAAC,IAAD;AAAM,QAAA,KAAK,EAAE;AAAEC,UAAAA,KAAK,EAAE;AAAT,SAAb;AAAA,gCACI,QAAC,IAAD,CAAM,GAAN;AAAU,UAAA,OAAO,EAAC,KAAlB;AAAwB,UAAA,GAAG,EAAC;AAA5B;AAAA;AAAA;AAAA;AAAA,gBADJ,eAEI,QAAC,IAAD,CAAM,IAAN;AAAA,kCACI,QAAC,IAAD,CAAM,KAAN;AAAA,sBAAcJ,QAAQ,KAAKK,SAAb,IAA0BL,QAAQ,CAACM;AAAjD;AAAA;AAAA;AAAA;AAAA,kBADJ,eAEI,QAAC,IAAD,CAAM,IAAN;AAAA,sBACMN,QAAQ,KAAKK,SAAb,IAA0BL,QAAQ,CAACO;AADzC;AAAA;AAAA;AAAA;AAAA,kBAFJ;AAAA;AAAA;AAAA;AAAA;AAAA,gBAFJ,eAQQ,QAAC,SAAD;AAAW,UAAA,SAAS,EAAC,kBAArB;AAAA,kCACI,QAAC,aAAD;AAAA,qCAA0BP,QAAQ,KAAKK,SAAb,IAA0BL,QAAQ,CAACQ,OAA7D;AAAA;AAAA;AAAA;AAAA;AAAA,kBADJ,eAEI,QAAC,aAAD;AAAA,iCAAuBR,QAAQ,KAAKK,SAAb,IAA0BL,QAAQ,CAACS,IAA1D;AAAA;AAAA;AAAA;AAAA;AAAA,kBAFJ,eAGI,QAAC,aAAD;AAAA,sBAAiBT,QAAQ,KAAKK,SAAb,IAA0BL,QAAQ,CAACU;AAApD;AAAA;AAAA;AAAA;AAAA,kBAHJ;AAAA;AAAA;AAAA;AAAA;AAAA,gBARR;AAAA;AAAA;AAAA;AAAA;AAAA;AADJ;AAAA;AAAA;AAAA;AAAA;AA0BI;AACZ;AACA;AACA;AACA;AACA;AACA;;AAlCI;;AAqCA,WAASP,iBAAT,GAA4B;AACxBD,IAAAA,cAAc,CAAC,IAAD,CAAd;AACAD,IAAAA,UAAU,CAAC;AACP,cAAQD,QAAQ,CAACM,IADV;AAEP,kBAAWN,QAAQ,CAACQ;AAFb,KAAD,CAAV;AAIAG,IAAAA,OAAO,CAACC,GAAR,CAAY,0BAA0BC,QAAtC;AAEH;AAGJ,CAlDD;;KAAMd,I;AAoDN,eAAeA,IAAf","sourcesContent":["import 'bootstrap/dist/css/bootstrap.css';\r\n\r\nimport {Card, ListGroupItem, ListGroup } from 'react-bootstrap'\r\n\r\nimport React from 'react'\r\n\r\nimport \"./orders.css\"\r\n\r\nconst Menu = ({menuData, updateItem, updateNewOrder}) => {\r\n    \r\n    return (\r\n        //todo find a way to update parents dish state from this child component\r\n        <div className='cardContainer' onClick={() => updateCurrentDish()}>\r\n            <Card style={{ width: '18rem'}} >\r\n                <Card.Img variant=\"top\" src=\"holder.js/100px180?text=Image cap\" />\r\n                <Card.Body>\r\n                    <Card.Title>{ menuData !== undefined && menuData.dish}</Card.Title>\r\n                    <Card.Text>\r\n                        { menuData !== undefined && menuData.description}  \r\n                    </Card.Text>\r\n                </Card.Body>\r\n                    <ListGroup className=\"list-group-flush\">\r\n                        <ListGroupItem>location: {menuData !== undefined && menuData.zipcode}</ListGroupItem>\r\n                        <ListGroupItem>Chef: { menuData !== undefined && menuData.chef}</ListGroupItem>\r\n                        <ListGroupItem>{ menuData !== undefined && menuData.price}</ListGroupItem>\r\n                    </ListGroup>\r\n                \r\n            </Card>\r\n        </div>\r\n        \r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n            \r\n            /* <Row>\r\n                <Col>Dish:{ menuData !== undefined && orderData.dish}</Col>\r\n                <Col>Price: ${menuData !== undefined && orderData.price}</Col>\r\n                \r\n                {/* <Col><Button onClick={() => changeWaiter()}>change waiter</Button></Col>\r\n                <Col><Button onClick={() => changeOrder()}>change order</Button></Col>\r\n            </Row> */\r\n        \r\n    )\r\n    function updateCurrentDish(){\r\n        updateNewOrder(true)\r\n        updateItem({\r\n            \"dish\": menuData.dish, \r\n            \"zipcode:\":menuData.zipcode\r\n        });\r\n        console.log(\"zipCode updated with \" + menudata)\r\n        \r\n    }\r\n\r\n\r\n}\r\n\r\nexport default Menu"]},"metadata":{},"sourceType":"module"}