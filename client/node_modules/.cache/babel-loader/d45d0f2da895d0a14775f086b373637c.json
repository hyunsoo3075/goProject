{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\hyunsoo3075\\\\Desktop\\\\HW\\\\GoPractice\\\\goproj\\\\client\\\\src\\\\components\\\\orders.components.js\",\n    _s = $RefreshSig$();\n\nimport React, { useState, useEffect } from 'react';\nimport axios from \"axios\";\nimport { Row, Button, Form, Container, Modal } from 'react-bootstrap';\nimport Order from './single-order.component';\nimport Menu from './single-menu-item.component';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst Orders = () => {\n  _s();\n\n  const [orders, setOrders] = useState([]);\n  const [refreshData, setRefreshData] = useState(false);\n  const [menu, setMenu] = useState([]);\n  const [addNewOrder, setAddNewOrder] = useState(false);\n  const [newOrder, setNewOrder] = useState({\n    \"dish\": \"\",\n    \"name\": \"\",\n    \"chef\": \"\",\n    \"price\": 0,\n    \"zipcode\": \"\"\n  });\n  const [newItem, setNewItem] = useState({\n    \"dish\": \"\",\n    \"zipcode\": \"\"\n  });\n  const [showOrders, setShowOrders] = useState(false); //gets run at initial loadup\n\n  useEffect(() => {\n    getAllMenuItems();\n  }, []); //refreshes the page\n\n  if (refreshData) {\n    setRefreshData(false);\n    getAllOrders();\n  }\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(Container, {\n      children: /*#__PURE__*/_jsxDEV(Button, {\n        onClick: () => setShowOrders(true),\n        children: \"See current orders\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 36,\n        columnNumber: 17\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 35,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(Modal, {\n      show: showOrders,\n      onHide: () => setShowOrders(false),\n      centered: true,\n      children: /*#__PURE__*/_jsxDEV(Row, {\n        children: orders != null && orders.map((order, i) => /*#__PURE__*/_jsxDEV(Order, {\n          orderData: order,\n          deleteSingleOrder: deleteSingleOrder\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 41,\n          columnNumber: 25\n        }, this))\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 39,\n        columnNumber: 17\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 38,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(Container, {\n      children: menu != null && menu.map((menuItem, i) => /*#__PURE__*/_jsxDEV(Menu, {\n        menuData: menuItem,\n        updateItem: setNewItem,\n        updateNewOrder: setAddNewOrder,\n        updateOrder: setNewOrder\n      }, menuItem._id, false, {\n        fileName: _jsxFileName,\n        lineNumber: 47,\n        columnNumber: 21\n      }, this))\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 45,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(Modal, {\n      show: addNewOrder,\n      onHide: () => setAddNewOrder(false),\n      centered: true,\n      children: [/*#__PURE__*/_jsxDEV(Modal.Header, {\n        closeButton: true,\n        children: /*#__PURE__*/_jsxDEV(Modal.Title, {\n          children: [\"Order \", newItem.dish, \" \"]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 53,\n          columnNumber: 21\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 52,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(Modal.Body, {\n        children: [/*#__PURE__*/_jsxDEV(Form.Group, {\n          children: [/*#__PURE__*/_jsxDEV(Form.Label, {\n            children: \"your name \"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 59,\n            columnNumber: 25\n          }, this), /*#__PURE__*/_jsxDEV(Form.Control, {\n            onChange: event => {\n              newOrder.name = event.target.value;\n            }\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 60,\n            columnNumber: 25\n          }, this), /*#__PURE__*/_jsxDEV(Form.Label, {\n            children: \"your zipcode\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 61,\n            columnNumber: 25\n          }, this), /*#__PURE__*/_jsxDEV(Form.Control, {\n            onChange: event => {\n              newOrder.zipcode = event.target.value;\n            }\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 62,\n            columnNumber: 25\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 57,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(Button, {\n          onClick: () => addSingleOrder(),\n          children: \"Add\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 65,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(Button, {\n          onClick: () => setAddNewOrder(false),\n          children: \"Cancel\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 66,\n          columnNumber: 21\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 56,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 51,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 34,\n    columnNumber: 9\n  }, this); //creates a new order\n\n  function addSingleOrder() {\n    setAddNewOrder(false);\n    var url = \"http://localhost:3000/order/create\";\n\n    if (newItem.zipcode != newOrder.zipcode) {\n      // console.log(\"the neworder zipcode is \" + newOrder.zipcode)\n      // console.log(\"the newitem zipcode is \" + newItem.zipcode)\n      alert(\"zip code must allign with chef's\");\n    } else {\n      axios.post(url, {\n        \"customername\": newOrder.name,\n        \"dish\": newOrder.dish,\n        \"price\": parseFloat(newOrder.price),\n        \"chef\": newOrder.chef,\n        \"zipcode\": newOrder.zipcode\n      }).then(response => {\n        if (response.status === 200) {\n          setRefreshData(true);\n        }\n      });\n    }\n  } //gets all the orders\n\n\n  function getAllMenuItems() {\n    var url = \"http://localhost:3000/menu\";\n    axios.get(url, {\n      responseType: 'json'\n    }).then(response => {\n      if (response.status === 200) {\n        setMenu(response.data);\n      }\n    });\n  }\n\n  function getAllOrders() {\n    var url = \"http://localhost:3000/orders\";\n    axios.get(url, {\n      responseType: 'json'\n    }).then(response => {\n      if (response.status === 200) {\n        setOrders(response.data);\n      }\n    });\n  } //deletes a single order\n\n\n  function deleteSingleOrder(id) {\n    var url = \"http://localhost:3000/order/delete/\" + id;\n    axios.delete(url, {}).then(response => {\n      if (response.status === 200) {\n        setRefreshData(true);\n      }\n    });\n  }\n};\n\n_s(Orders, \"WcNWmlWGXL3GXr2E+eRf4kr8hJY=\");\n\n_c = Orders;\nexport default Orders;\n\nvar _c;\n\n$RefreshReg$(_c, \"Orders\");","map":{"version":3,"sources":["C:/Users/hyunsoo3075/Desktop/HW/GoPractice/goproj/client/src/components/orders.components.js"],"names":["React","useState","useEffect","axios","Row","Button","Form","Container","Modal","Order","Menu","Orders","orders","setOrders","refreshData","setRefreshData","menu","setMenu","addNewOrder","setAddNewOrder","newOrder","setNewOrder","newItem","setNewItem","showOrders","setShowOrders","getAllMenuItems","getAllOrders","map","order","i","deleteSingleOrder","menuItem","_id","dish","event","name","target","value","zipcode","addSingleOrder","url","alert","post","parseFloat","price","chef","then","response","status","get","responseType","data","id","delete"],"mappings":"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","sourcesContent":["import React, {useState, useEffect} from 'react';\r\n\r\nimport axios from \"axios\";\r\n\r\nimport {Row, Button, Form, Container, Modal } from 'react-bootstrap'\r\n\r\nimport Order from './single-order.component';\r\n\r\nimport Menu from './single-menu-item.component'\r\n\r\n\r\nconst Orders = () => {\r\n\r\n    const [orders, setOrders] = useState([])\r\n    const [refreshData, setRefreshData] = useState(false)\r\n    const [menu, setMenu] = useState([]);\r\n\r\n    const [addNewOrder, setAddNewOrder] = useState(false)\r\n    const [newOrder, setNewOrder] = useState({\"dish\": \"\", \"name\":\"\", \"chef\": \"\", \"price\": 0, \"zipcode\":\"\"})\r\n    const [newItem, setNewItem] = useState({\"dish\": \"\", \"zipcode\":\"\"})\r\n    const [showOrders, setShowOrders] = useState(false)\r\n    //gets run at initial loadup\r\n    useEffect(() => {\r\n        getAllMenuItems();\r\n    }, [])\r\n\r\n    //refreshes the page\r\n    if(refreshData){\r\n        setRefreshData(false);\r\n        getAllOrders();\r\n    }\r\n    \r\n    return (\r\n        <div>\r\n            <Container>\r\n                <Button onClick={() => setShowOrders(true)}>See current orders</Button>\r\n            </Container>\r\n            <Modal show={showOrders} onHide={() => setShowOrders(false)} centered>\r\n                <Row>\r\n                    {orders != null && orders.map((order, i) => (\r\n                        <Order orderData={order} deleteSingleOrder={deleteSingleOrder}/>\r\n                    ))}\r\n                </Row>\r\n            </Modal>\r\n            <Container>\r\n                {menu != null && menu.map((menuItem, i) => (\r\n                    <Menu key={menuItem._id}  menuData={menuItem} updateItem = {setNewItem} updateNewOrder = {setAddNewOrder} updateOrder = {setNewOrder}/>\r\n                ))}\r\n            </Container>\r\n            \r\n            <Modal show={addNewOrder} onHide={() => setAddNewOrder(false)} centered>\r\n                <Modal.Header closeButton>\r\n                    <Modal.Title>Order {newItem.dish} </Modal.Title>\r\n                </Modal.Header>\r\n\r\n                <Modal.Body>\r\n                    <Form.Group>\r\n                        \r\n                        <Form.Label>your name </Form.Label>\r\n                        <Form.Control onChange={(event) => {newOrder.name = event.target.value}}/>\r\n                        <Form.Label>your zipcode</Form.Label>\r\n                        <Form.Control onChange={(event) => {newOrder.zipcode = event.target.value}}/>\r\n                        \r\n                    </Form.Group>\r\n                    <Button onClick={() => addSingleOrder()}>Add</Button>\r\n                    <Button onClick={() => setAddNewOrder(false)}>Cancel</Button>\r\n                </Modal.Body>\r\n            </Modal> \r\n            \r\n        </div>\r\n        \r\n    );\r\n\r\n    //creates a new order\r\n    function addSingleOrder(){\r\n        setAddNewOrder(false)\r\n        var url = \"http://localhost:3000/order/create\"\r\n        \r\n        if(newItem.zipcode != newOrder.zipcode){\r\n            // console.log(\"the neworder zipcode is \" + newOrder.zipcode)\r\n            // console.log(\"the newitem zipcode is \" + newItem.zipcode)\r\n            alert(\"zip code must allign with chef's\")\r\n        }\r\n        else{\r\n            axios.post(url, {\r\n                \"customername\": newOrder.name,\r\n                \"dish\": newOrder.dish,\r\n                \"price\": parseFloat(newOrder.price),\r\n                \"chef\": newOrder.chef,\r\n                \"zipcode\":newOrder.zipcode\r\n                    \r\n            }).then(response => {\r\n                if(response.status === 200){\r\n                    setRefreshData(true)\r\n                }\r\n            })\r\n\r\n        }\r\n        \r\n        \r\n    }\r\n\r\n    //gets all the orders\r\n    function getAllMenuItems(){\r\n        var url = \"http://localhost:3000/menu\"\r\n        axios.get(url, {\r\n            responseType: 'json'\r\n        }).then(response => {\r\n            if(response.status === 200){\r\n                setMenu(response.data)\r\n            }\r\n        })\r\n    }\r\n    function getAllOrders(){\r\n        var url = \"http://localhost:3000/orders\"\r\n        axios.get(url, {\r\n            responseType: 'json'\r\n        }).then(response => {\r\n            if(response.status === 200){\r\n                setOrders(response.data)\r\n            }\r\n        })\r\n    }\r\n\r\n    //deletes a single order\r\n    function deleteSingleOrder(id){\r\n        var url = \"http://localhost:3000/order/delete/\" + id\r\n        axios.delete(url, {\r\n\r\n        }).then(response => {\r\n            if(response.status === 200){\r\n                setRefreshData(true)\r\n            }\r\n        })\r\n    }\r\n\r\n}\r\n\r\nexport default Orders"]},"metadata":{},"sourceType":"module"}