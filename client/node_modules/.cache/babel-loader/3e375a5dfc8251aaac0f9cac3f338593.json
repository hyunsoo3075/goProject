{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\hyunsoo3075\\\\Desktop\\\\HW\\\\GoPractice\\\\goproj\\\\client\\\\src\\\\components\\\\orders.components.js\",\n    _s = $RefreshSig$();\n\nimport React, { useState, useEffect } from 'react';\nimport axios from \"axios\";\nimport { Row, Button, Form, Container, Modal } from 'react-bootstrap';\nimport Order from './single-order.component';\nimport Menu from './single-menu-item.component';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst Orders = () => {\n  _s();\n\n  const [orders, setOrders] = useState([]);\n  const [refreshData, setRefreshData] = useState(false);\n  const [menu, setMenu] = useState([]);\n  const [addNewOrder, setAddNewOrder] = useState(false);\n  const [addNewItem, setAddNewItem] = useState({\n    \"dish\": \"\",\n    \"description\": \"\",\n    \"price\": 0,\n    \"chef\": \"\",\n    \"zipcode\": \"\"\n  });\n  const [newOrder, setNewOrder] = useState({\n    \"dish\": \"\",\n    \"name\": \"\",\n    \"chef\": \"\",\n    \"price\": 0,\n    \"zipcode\": \"\"\n  });\n  const [newItem, setNewItem] = useState({\n    \"dish\": \"\",\n    \"zipcode\": \"\"\n  });\n  const [showOrders, setShowOrders] = useState(false);\n  const [showAddNewItem, setShowAddNewItem] = useState(false); //gets run at initial loadup\n\n  useEffect(() => {\n    getAllMenuItems();\n    getAllOrders();\n  }, []); //refreshes the page\n\n  if (refreshData) {\n    setRefreshData(false);\n    getAllOrders();\n  }\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(Container, {\n      children: /*#__PURE__*/_jsxDEV(Button, {\n        onClick: () => orders !== null ? setShowOrders(true) : alert(\"You don't have any orders currently\"),\n        children: \"See current orders\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 38,\n        columnNumber: 17\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 37,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(Container, {\n      children: /*#__PURE__*/_jsxDEV(Button, {\n        onClick: () => setShowAddNewItem(true),\n        children: \"add new menu item\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 41,\n        columnNumber: 17\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 40,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(Modal, {\n      show: showOrders,\n      onHide: () => setShowOrders(false),\n      centered: true,\n      children: orders != null && orders.map((order, i) => /*#__PURE__*/_jsxDEV(Order, {\n        orderData: order,\n        deleteSingleOrder: deleteSingleOrder\n      }, order._id, false, {\n        fileName: _jsxFileName,\n        lineNumber: 46,\n        columnNumber: 25\n      }, this))\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 43,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(Container, {\n      children: menu != null && menu.map((menuItem, i) => /*#__PURE__*/_jsxDEV(Menu, {\n        menuData: menuItem,\n        updateItem: setNewItem,\n        updateNewOrder: setAddNewOrder,\n        updateOrder: setNewOrder\n      }, menuItem._id, false, {\n        fileName: _jsxFileName,\n        lineNumber: 53,\n        columnNumber: 21\n      }, this))\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 50,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(Modal, {\n      show: addNewOrder,\n      onHide: () => setAddNewOrder(false),\n      centered: true,\n      children: [/*#__PURE__*/_jsxDEV(Modal.Header, {\n        closeButton: true,\n        children: /*#__PURE__*/_jsxDEV(Modal.Title, {\n          children: [\"Order \", newItem.dish, \" \"]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 59,\n          columnNumber: 21\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 58,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(Modal.Body, {\n        children: [/*#__PURE__*/_jsxDEV(Form.Group, {\n          children: [/*#__PURE__*/_jsxDEV(Form.Label, {\n            children: \"your name \"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 65,\n            columnNumber: 25\n          }, this), /*#__PURE__*/_jsxDEV(Form.Control, {\n            onChange: event => {\n              newOrder.name = event.target.value;\n            }\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 66,\n            columnNumber: 25\n          }, this), /*#__PURE__*/_jsxDEV(Form.Label, {\n            children: \"your zipcode\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 67,\n            columnNumber: 25\n          }, this), /*#__PURE__*/_jsxDEV(Form.Control, {\n            onChange: event => {\n              newOrder.zipcode = event.target.value;\n            }\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 68,\n            columnNumber: 25\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 63,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(Button, {\n          onClick: () => addSingleOrder(),\n          children: \"Add\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 71,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(Button, {\n          onClick: () => setAddNewOrder(false),\n          children: \"Cancel\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 72,\n          columnNumber: 21\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 62,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 57,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(Modal, {\n      show: showAddNewItem,\n      onHide: () => setShowAddNewItem(false),\n      centered: true,\n      children: [/*#__PURE__*/_jsxDEV(Modal.Header, {\n        closeButton: true,\n        children: /*#__PURE__*/_jsxDEV(Modal.Title, {\n          children: \"add new dish \"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 78,\n          columnNumber: 21\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 77,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(Modal.Body, {\n        children: [/*#__PURE__*/_jsxDEV(Form.Group, {\n          children: [/*#__PURE__*/_jsxDEV(Form.Label, {\n            children: \"dish \"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 84,\n            columnNumber: 25\n          }, this), /*#__PURE__*/_jsxDEV(Form.Control, {\n            onChange: event => {\n              addNewItem.dish = event.target.value;\n            }\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 85,\n            columnNumber: 25\n          }, this), /*#__PURE__*/_jsxDEV(Form.Label, {\n            children: \"description\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 86,\n            columnNumber: 25\n          }, this), /*#__PURE__*/_jsxDEV(Form.Control, {\n            onChange: event => {\n              addNewItem.description = event.target.value;\n            }\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 87,\n            columnNumber: 25\n          }, this), /*#__PURE__*/_jsxDEV(Form.Label, {\n            children: \"price\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 88,\n            columnNumber: 25\n          }, this), /*#__PURE__*/_jsxDEV(Form.Control, {\n            onChange: event => {\n              addNewItem.price = event.target.value;\n            }\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 89,\n            columnNumber: 25\n          }, this), /*#__PURE__*/_jsxDEV(Form.Label, {\n            children: \"chef name\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 90,\n            columnNumber: 25\n          }, this), /*#__PURE__*/_jsxDEV(Form.Control, {\n            onChange: event => {\n              addNewItem.chef = event.target.value;\n            }\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 91,\n            columnNumber: 25\n          }, this), /*#__PURE__*/_jsxDEV(Form.Label, {\n            children: \"chef's zipcode\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 92,\n            columnNumber: 25\n          }, this), /*#__PURE__*/_jsxDEV(Form.Control, {\n            onChange: event => {\n              addNewItem.zipcode = event.target.value;\n            }\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 93,\n            columnNumber: 25\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 82,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(Button, {\n          onClick: () => addMenuItem(),\n          children: \"Add\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 99,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(Button, {\n          onClick: () => setShowAddNewItem(false),\n          children: \"Cancel\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 100,\n          columnNumber: 21\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 81,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 76,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 36,\n    columnNumber: 9\n  }, this); // Dish        *string            `json:\"dish\" binding:\"required\"`\n  // Description *string            `json:\"description\" binding:\"required\"`\n  // Price       *float64           `json:\"price\" binding:\"required\"`\n  // Chef        *string            `json:\"chef\" binding:\"required\"`\n  // Zipcode  \n\n  function addMenuItem() {\n    setShowAddNewItem(false);\n    var url = \"http://localhost:3000/menu/create\";\n    axios.post(url, {\n      \"dish\": addNewItem.dish,\n      \"description\": addNewItem.description,\n      \"price\": parseFloat(addNewItem.price),\n      \"chef\": addNewItem.chef,\n      \"zipcode\": addNewItem.zipcode\n    }).then(response => {\n      if (response.status === 200) {\n        setRefreshData(true);\n      }\n    });\n  } //creates a new order\n\n\n  function addSingleOrder() {\n    setAddNewOrder(false);\n    var url = \"http://localhost:3000/order/create\";\n\n    if (newItem.zipcode != newOrder.zipcode) {\n      // console.log(\"the neworder zipcode is \" + newOrder.zipcode)\n      // console.log(\"the newitem zipcode is \" + newItem.zipcode)\n      alert(\"zip code must allign with chef's\");\n    } else {\n      axios.post(url, {\n        \"customername\": newOrder.name,\n        \"dish\": newOrder.dish,\n        \"price\": parseFloat(newOrder.price),\n        \"chef\": newOrder.chef,\n        \"zipcode\": newOrder.zipcode\n      }).then(response => {\n        if (response.status === 200) {\n          setRefreshData(true);\n        }\n      });\n    }\n  } //gets all the orders\n\n\n  function getAllMenuItems() {\n    var url = \"http://localhost:3000/menu\";\n    axios.get(url, {\n      responseType: 'json'\n    }).then(response => {\n      if (response.status === 200) {\n        setMenu(response.data);\n      }\n    });\n  }\n\n  function getAllOrders() {\n    var url = \"http://localhost:3000/orders\";\n    axios.get(url, {\n      responseType: 'json'\n    }).then(response => {\n      if (response.status === 200) {\n        setOrders(response.data);\n      }\n    });\n  } //deletes a single order\n\n\n  function deleteSingleOrder(id) {\n    var url = \"http://localhost:3000/order/delete/\" + id;\n    axios.delete(url, {}).then(response => {\n      if (response.status === 200) {\n        setRefreshData(true);\n      }\n    });\n  }\n};\n\n_s(Orders, \"7LMVraxSU/WkQDFEaK8Y3APGwMM=\");\n\n_c = Orders;\nexport default Orders;\n\nvar _c;\n\n$RefreshReg$(_c, \"Orders\");","map":{"version":3,"sources":["C:/Users/hyunsoo3075/Desktop/HW/GoPractice/goproj/client/src/components/orders.components.js"],"names":["React","useState","useEffect","axios","Row","Button","Form","Container","Modal","Order","Menu","Orders","orders","setOrders","refreshData","setRefreshData","menu","setMenu","addNewOrder","setAddNewOrder","addNewItem","setAddNewItem","newOrder","setNewOrder","newItem","setNewItem","showOrders","setShowOrders","showAddNewItem","setShowAddNewItem","getAllMenuItems","getAllOrders","alert","map","order","i","deleteSingleOrder","_id","menuItem","dish","event","name","target","value","zipcode","addSingleOrder","description","price","chef","addMenuItem","url","post","parseFloat","then","response","status","get","responseType","data","id","delete"],"mappings":"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","sourcesContent":["import React, {useState, useEffect} from 'react';\r\n\r\nimport axios from \"axios\";\r\n\r\nimport {Row, Button, Form, Container, Modal } from 'react-bootstrap'\r\n\r\nimport Order from './single-order.component';\r\n\r\nimport Menu from './single-menu-item.component'\r\n\r\n\r\nconst Orders = () => {\r\n\r\n    const [orders, setOrders] = useState([])\r\n    const [refreshData, setRefreshData] = useState(false)\r\n    const [menu, setMenu] = useState([]);\r\n    const [addNewOrder, setAddNewOrder] = useState(false)\r\n    const [addNewItem, setAddNewItem]  = useState({\"dish\": \"\", \"description\":\"\", \"price\": 0, \"chef\":\"\", \"zipcode\": \"\"})\r\n    const [newOrder, setNewOrder] = useState({\"dish\": \"\", \"name\":\"\", \"chef\": \"\", \"price\": 0, \"zipcode\":\"\"})\r\n    const [newItem, setNewItem] = useState({\"dish\": \"\", \"zipcode\":\"\"})\r\n    const [showOrders, setShowOrders] = useState(false)\r\n    const [showAddNewItem, setShowAddNewItem] = useState(false)\r\n    //gets run at initial loadup\r\n    useEffect(() => {\r\n        getAllMenuItems();\r\n        getAllOrders();\r\n    }, [])\r\n\r\n    //refreshes the page\r\n    if(refreshData){\r\n        setRefreshData(false);\r\n        getAllOrders();\r\n    }\r\n    \r\n    return (\r\n        <div>\r\n            <Container>\r\n                <Button onClick={() => orders !== null?setShowOrders(true):alert(\"You don't have any orders currently\")}>See current orders</Button>\r\n            </Container>\r\n            <Container>\r\n                <Button onClick={() => setShowAddNewItem(true)}>add new menu item</Button>\r\n            </Container>\r\n            <Modal show={showOrders} onHide={() => setShowOrders(false)} centered >\r\n                \r\n                {orders != null && orders.map((order, i) => (\r\n                        <Order key = {order._id} orderData={order} deleteSingleOrder={deleteSingleOrder}/>\r\n                ))}\r\n                \r\n            </Modal>\r\n            <Container>\r\n\r\n                {menu != null && menu.map((menuItem, i) => (\r\n                    <Menu key={menuItem._id}  menuData={menuItem} updateItem = {setNewItem} updateNewOrder = {setAddNewOrder} updateOrder = {setNewOrder}/>\r\n                ))}\r\n            </Container>\r\n            \r\n            <Modal show={addNewOrder} onHide={() => setAddNewOrder(false)} centered>\r\n                <Modal.Header closeButton>\r\n                    <Modal.Title>Order {newItem.dish} </Modal.Title>\r\n                </Modal.Header>\r\n\r\n                <Modal.Body>\r\n                    <Form.Group>\r\n                        \r\n                        <Form.Label>your name </Form.Label>\r\n                        <Form.Control onChange={(event) => {newOrder.name = event.target.value}}/>\r\n                        <Form.Label>your zipcode</Form.Label>\r\n                        <Form.Control onChange={(event) => {newOrder.zipcode = event.target.value}}/>\r\n                        \r\n                    </Form.Group>\r\n                    <Button onClick={() => addSingleOrder()}>Add</Button>\r\n                    <Button onClick={() => setAddNewOrder(false)}>Cancel</Button>\r\n                </Modal.Body>\r\n            </Modal> \r\n            \r\n            <Modal show={showAddNewItem} onHide={() => setShowAddNewItem(false)} centered>\r\n                <Modal.Header closeButton>\r\n                    <Modal.Title>add new dish </Modal.Title>\r\n                </Modal.Header>\r\n\r\n                <Modal.Body>\r\n                    <Form.Group>\r\n                        \r\n                        <Form.Label>dish </Form.Label>\r\n                        <Form.Control onChange={(event) => {addNewItem.dish = event.target.value}}/>\r\n                        <Form.Label>description</Form.Label>\r\n                        <Form.Control onChange={(event) => {addNewItem.description = event.target.value}}/>\r\n                        <Form.Label>price</Form.Label>\r\n                        <Form.Control onChange={(event) => {addNewItem.price = event.target.value}}/>\r\n                        <Form.Label>chef name</Form.Label>\r\n                        <Form.Control onChange={(event) => {addNewItem.chef = event.target.value}}/>\r\n                        <Form.Label>chef's zipcode</Form.Label>\r\n                        <Form.Control onChange={(event) => {addNewItem.zipcode = event.target.value}}/>\r\n                        \r\n                        \r\n                        \r\n                        \r\n                    </Form.Group>\r\n                    <Button onClick={() => addMenuItem()}>Add</Button>\r\n                    <Button onClick={() => setShowAddNewItem(false)}>Cancel</Button>\r\n                </Modal.Body>\r\n            </Modal> \r\n        </div>\r\n        \r\n    );\r\n    // Dish        *string            `json:\"dish\" binding:\"required\"`\r\n\t// Description *string            `json:\"description\" binding:\"required\"`\r\n\t// Price       *float64           `json:\"price\" binding:\"required\"`\r\n\t// Chef        *string            `json:\"chef\" binding:\"required\"`\r\n\t// Zipcode  \r\n    function addMenuItem(){\r\n        setShowAddNewItem(false)\r\n        var url = \"http://localhost:3000/menu/create\"\r\n        axios.post(url,{\r\n            \"dish\": addNewItem.dish, \r\n            \"description\":addNewItem.description, \r\n            \"price\": parseFloat(addNewItem.price), \r\n            \"chef\":addNewItem.chef, \r\n            \"zipcode\": addNewItem.zipcode\r\n        }).then(response => {\r\n            if(response.status === 200){\r\n                setRefreshData(true)\r\n            }\r\n        })\r\n    }\r\n    //creates a new order\r\n    function addSingleOrder(){\r\n        setAddNewOrder(false)\r\n        var url = \"http://localhost:3000/order/create\"\r\n        \r\n        if(newItem.zipcode != newOrder.zipcode){\r\n            // console.log(\"the neworder zipcode is \" + newOrder.zipcode)\r\n            // console.log(\"the newitem zipcode is \" + newItem.zipcode)\r\n            alert(\"zip code must allign with chef's\")\r\n        }\r\n        else{\r\n            axios.post(url, {\r\n                \"customername\": newOrder.name,\r\n                \"dish\": newOrder.dish,\r\n                \"price\": parseFloat(newOrder.price),\r\n                \"chef\": newOrder.chef,\r\n                \"zipcode\":newOrder.zipcode\r\n                    \r\n            }).then(response => {\r\n                if(response.status === 200){\r\n                    setRefreshData(true)\r\n                }\r\n            })\r\n\r\n        }\r\n        \r\n        \r\n    }\r\n\r\n    //gets all the orders\r\n    function getAllMenuItems(){\r\n        var url = \"http://localhost:3000/menu\"\r\n        axios.get(url, {\r\n            responseType: 'json'\r\n        }).then(response => {\r\n            if(response.status === 200){\r\n                setMenu(response.data)\r\n            }\r\n        })\r\n    }\r\n    function getAllOrders(){\r\n        var url = \"http://localhost:3000/orders\"\r\n        axios.get(url, {\r\n            responseType: 'json'\r\n        }).then(response => {\r\n            if(response.status === 200){\r\n                setOrders(response.data)\r\n            }\r\n        })\r\n    }\r\n\r\n    //deletes a single order\r\n    function deleteSingleOrder(id){\r\n        var url = \"http://localhost:3000/order/delete/\" + id\r\n        axios.delete(url, {\r\n\r\n        }).then(response => {\r\n            if(response.status === 200){\r\n                setRefreshData(true)\r\n            }\r\n        })\r\n    }\r\n\r\n}\r\n\r\nexport default Orders"]},"metadata":{},"sourceType":"module"}