{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\hyunsoo3075\\\\Desktop\\\\HW\\\\GoPractice\\\\goproj\\\\client\\\\src\\\\components\\\\orders.components.js\",\n    _s = $RefreshSig$();\n\nimport React, { useState, useEffect } from 'react';\nimport axios from \"axios\";\nimport { Button, Form, Container, Modal } from 'react-bootstrap';\nimport Order from './single-order.component';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst Orders = () => {\n  _s();\n\n  const [orders, setOrders] = useState([]);\n  const [refreshData, setRefreshData] = useState(false);\n  const [menu, setMenu] = useState([]); // const [changeOrder, setChangeOrder] = useState({\"change\": false, \"id\": 0})\n  // const [changeWaiter, setChangeWaiter] = useState({\"change\": false, \"id\": 0})\n  // const [newWaiterName, setNewWaiterName] = useState(\"\")\n\n  const [addNewOrder, setAddNewOrder] = useState(false);\n  const [newOrder, setNewOrder] = useState({\n    \"dish\": \"\",\n    \"name\": \"\",\n    \"chef\": \"\",\n    \"price\": 0\n  }); //gets run at initial loadup\n\n  useEffect(() => {\n    getAllOrders();\n  }, []); //refreshes the page\n\n  if (refreshData) {\n    setRefreshData(false);\n    getAllOrders();\n  }\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(Container, {\n      children: /*#__PURE__*/_jsxDEV(Button, {\n        onClick: () => setAddNewOrder(true),\n        children: \"Add new order\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 38,\n        columnNumber: 17\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 37,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(Container, {\n      children: orders != null && orders.map((order, i) => /*#__PURE__*/_jsxDEV(Order, {\n        orderData: order,\n        deleteSingleOrder: deleteSingleOrder\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 44,\n        columnNumber: 21\n      }, this))\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 42,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(Modal, {\n      show: addNewOrder,\n      onHide: () => setAddNewOrder(false),\n      centered: true,\n      children: [/*#__PURE__*/_jsxDEV(Modal.Header, {\n        closeButton: true,\n        children: /*#__PURE__*/_jsxDEV(Modal.Title, {\n          children: \"Add Order\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 51,\n          columnNumber: 21\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 50,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(Modal.Body, {\n        children: [/*#__PURE__*/_jsxDEV(Form.Group, {\n          children: [/*#__PURE__*/_jsxDEV(Form.Label, {\n            children: \"dish\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 56,\n            columnNumber: 25\n          }, this), /*#__PURE__*/_jsxDEV(Form.Control, {\n            onChange: event => {\n              newOrder.dish = event.target.value;\n            }\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 57,\n            columnNumber: 25\n          }, this), /*#__PURE__*/_jsxDEV(Form.Label, {\n            children: \"your name\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 58,\n            columnNumber: 25\n          }, this), /*#__PURE__*/_jsxDEV(Form.Control, {\n            onChange: event => {\n              newOrder.name = event.target.value;\n            }\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 59,\n            columnNumber: 25\n          }, this), /*#__PURE__*/_jsxDEV(Form.Label, {\n            children: \"chef\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 60,\n            columnNumber: 25\n          }, this), /*#__PURE__*/_jsxDEV(Form.Control, {\n            onChange: event => {\n              newOrder.chef = event.target.value;\n            }\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 61,\n            columnNumber: 25\n          }, this), /*#__PURE__*/_jsxDEV(Form.Label, {\n            children: \"price\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 62,\n            columnNumber: 25\n          }, this), /*#__PURE__*/_jsxDEV(Form.Control, {\n            type: \"number\",\n            onChange: event => {\n              newOrder.price = event.target.value;\n            }\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 63,\n            columnNumber: 25\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 55,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(Button, {\n          onClick: () => addSingleOrder(),\n          children: \"Add\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 65,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(Button, {\n          onClick: () => setAddNewOrder(false),\n          children: \"Cancel\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 66,\n          columnNumber: 21\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 54,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 49,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 34,\n    columnNumber: 9\n  }, this); //changes the waiter\n  // function changeWaiterForOrder(){\n  //     changeWaiter.change = false\n  //     var url = \"http://localhost:3000/waiter/update/\" + changeWaiter.id\n  //     axios.put(url, {\n  //         \"server\": newWaiterName\n  //     }).then(response => {\n  //         console.log(response.status)\n  //         if(response.status === 200){\n  //             setRefreshData(true)\n  //         }\n  //     })\n  // }\n  // //changes the order\n  // function changeSingleOrder(){\n  //     changeOrder.change = false;\n  //     var url = \"http://localhost:3000/order/update/\" + changeOrder.id\n  //     axios.put(url, newOrder)\n  //         .then(response => {\n  //         if(response.status === 200){\n  //             setRefreshData(true)\n  //         }\n  //     })\n  // }\n  //creates a new order\n\n  function addSingleOrder() {\n    setAddNewOrder(false);\n    var url = \"http://localhost:3000/order/create\";\n    axios.post(url, {\n      \"customername\": newOrder.name,\n      \"dish\": newOrder.dish,\n      \"price\": parseFloat(newOrder.price),\n      \"chef\": newOrder.chef\n    }).then(response => {\n      if (response.status === 200) {\n        setRefreshData(true);\n      }\n    });\n  } //gets all the orders\n\n\n  function getAllMenuItems() {\n    var url = \"http://localhost:3000/menu\";\n    axios.get(url, {\n      responseType: 'json'\n    }).then(response => {\n      if (response.status === 200) {\n        setMenu(response.data);\n      }\n    });\n  }\n\n  function getAllOrders() {\n    var url = \"http://localhost:3000/orders\";\n    axios.get(url, {\n      responseType: 'json'\n    }).then(response => {\n      if (response.status === 200) {\n        setOrders(response.data);\n      }\n    });\n  } //deletes a single order\n\n\n  function deleteSingleOrder(id) {\n    var url = \"http://localhost:3000/order/delete/\" + id;\n    axios.delete(url, {}).then(response => {\n      if (response.status === 200) {\n        setRefreshData(true);\n      }\n    });\n  }\n};\n\n_s(Orders, \"nHW+uspmQQpKs1PTTaEPt3j2QEo=\");\n\n_c = Orders;\nexport default Orders;\n\nvar _c;\n\n$RefreshReg$(_c, \"Orders\");","map":{"version":3,"sources":["C:/Users/hyunsoo3075/Desktop/HW/GoPractice/goproj/client/src/components/orders.components.js"],"names":["React","useState","useEffect","axios","Button","Form","Container","Modal","Order","Orders","orders","setOrders","refreshData","setRefreshData","menu","setMenu","addNewOrder","setAddNewOrder","newOrder","setNewOrder","getAllOrders","map","order","i","deleteSingleOrder","event","dish","target","value","name","chef","price","addSingleOrder","url","post","parseFloat","then","response","status","getAllMenuItems","get","responseType","data","id","delete"],"mappings":"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","sourcesContent":["import React, {useState, useEffect} from 'react';\r\n\r\nimport axios from \"axios\";\r\n\r\nimport {Button, Form, Container, Modal } from 'react-bootstrap'\r\n\r\nimport Order from './single-order.component';\r\n\r\nconst Orders = () => {\r\n\r\n    const [orders, setOrders] = useState([])\r\n    const [refreshData, setRefreshData] = useState(false)\r\n    const [menu, setMenu] = useState([]);\r\n\r\n    // const [changeOrder, setChangeOrder] = useState({\"change\": false, \"id\": 0})\r\n    // const [changeWaiter, setChangeWaiter] = useState({\"change\": false, \"id\": 0})\r\n    // const [newWaiterName, setNewWaiterName] = useState(\"\")\r\n\r\n    const [addNewOrder, setAddNewOrder] = useState(false)\r\n    const [newOrder, setNewOrder] = useState({\"dish\": \"\", \"name\":\"\", \"chef\": \"\", \"price\": 0})\r\n\r\n    //gets run at initial loadup\r\n    useEffect(() => {\r\n        getAllOrders();\r\n    }, [])\r\n\r\n    //refreshes the page\r\n    if(refreshData){\r\n        setRefreshData(false);\r\n        getAllOrders();\r\n    }\r\n\r\n    return (\r\n        <div>\r\n            \r\n            {/* add new order button */}\r\n            <Container>\r\n                <Button onClick={() => setAddNewOrder(true)}>Add new order</Button>\r\n            </Container>\r\n\r\n            {/* list all current orders */}\r\n            <Container>\r\n                {orders != null && orders.map((order, i) => (\r\n                    <Order orderData={order} deleteSingleOrder={deleteSingleOrder} />\r\n                ))}\r\n            </Container>\r\n            \r\n            {/* popup for adding a new order */}\r\n            <Modal show={addNewOrder} onHide={() => setAddNewOrder(false)} centered>\r\n                <Modal.Header closeButton>\r\n                    <Modal.Title>Add Order</Modal.Title>\r\n                </Modal.Header>\r\n\r\n                <Modal.Body>\r\n                    <Form.Group>\r\n                        <Form.Label >dish</Form.Label>\r\n                        <Form.Control onChange={(event) => {newOrder.dish = event.target.value}}/>\r\n                        <Form.Label>your name</Form.Label>\r\n                        <Form.Control onChange={(event) => {newOrder.name = event.target.value}}/>\r\n                        <Form.Label >chef</Form.Label>\r\n                        <Form.Control onChange={(event) => {newOrder.chef = event.target.value}}/>\r\n                        <Form.Label >price</Form.Label>\r\n                        <Form.Control type=\"number\" onChange={(event) => {newOrder.price = event.target.value}}/>\r\n                    </Form.Group>\r\n                    <Button onClick={() => addSingleOrder()}>Add</Button>\r\n                    <Button onClick={() => setAddNewOrder(false)}>Cancel</Button>\r\n                </Modal.Body>\r\n            </Modal>\r\n            \r\n            {/* popup for changing a waiter */}\r\n            {/* <Modal show={changeWaiter.change} onHide={() => setChangeWaiter({\"change\": false, \"id\": 0})} centered>\r\n                <Modal.Header closeButton>\r\n                    <Modal.Title>Change Waiter</Modal.Title>\r\n                </Modal.Header>\r\n\r\n                <Modal.Body>\r\n                    <Form.Group>\r\n                        <Form.Label >new waiter</Form.Label>\r\n                        <Form.Control onChange={(event) => {setNewWaiterName(event.target.value)}}/>\r\n                    </Form.Group>\r\n                    <Button onClick={() => changeWaiterForOrder()}>Change</Button>\r\n                    <Button onClick={() => setChangeWaiter({\"change\": false, \"id\": 0})}>Cancel</Button>\r\n                </Modal.Body>\r\n            </Modal> */}\r\n\r\n            {/* popup for changing an order */}\r\n            {/* <Modal show={changeOrder.change} onHide={() => setChangeOrder({\"change\": false, \"id\": 0})} centered>\r\n                <Modal.Header closeButton>\r\n                    <Modal.Title>Change Order</Modal.Title>\r\n                </Modal.Header>\r\n\r\n                <Modal.Body>\r\n                    <Form.Group>\r\n                        <Form.Label >dish</Form.Label>\r\n                        <Form.Control onChange={(event) => {newOrder.dish = event.target.value}}/>\r\n                        <Form.Label>waiter</Form.Label>\r\n                        <Form.Control onChange={(event) => {newOrder.server = event.target.value}}/>\r\n                        <Form.Label >table</Form.Label>\r\n                        <Form.Control onChange={(event) => {newOrder.table = event.target.value}}/>\r\n                        <Form.Label >price</Form.Label>\r\n                        <Form.Control type=\"number\" onChange={(event) => {newOrder.price = parseFloat(event.target.value)}}/>\r\n                    </Form.Group>\r\n                    <Button onClick={() => changeSingleOrder()}>Change</Button>\r\n                    <Button onClick={() => setChangeOrder({\"change\": false, \"id\": 0})}>Cancel</Button>\r\n                </Modal.Body>\r\n            </Modal> */}\r\n        </div>\r\n        \r\n    );\r\n\r\n    //changes the waiter\r\n    // function changeWaiterForOrder(){\r\n    //     changeWaiter.change = false\r\n    //     var url = \"http://localhost:3000/waiter/update/\" + changeWaiter.id\r\n    //     axios.put(url, {\r\n    //         \"server\": newWaiterName\r\n    //     }).then(response => {\r\n    //         console.log(response.status)\r\n    //         if(response.status === 200){\r\n    //             setRefreshData(true)\r\n    //         }\r\n    //     })\r\n        \r\n    // }\r\n\r\n    // //changes the order\r\n    // function changeSingleOrder(){\r\n    //     changeOrder.change = false;\r\n    //     var url = \"http://localhost:3000/order/update/\" + changeOrder.id\r\n    //     axios.put(url, newOrder)\r\n    //         .then(response => {\r\n    //         if(response.status === 200){\r\n    //             setRefreshData(true)\r\n    //         }\r\n    //     })\r\n    // }\r\n\r\n    //creates a new order\r\n    function addSingleOrder(){\r\n        setAddNewOrder(false)\r\n        var url = \"http://localhost:3000/order/create\"\r\n        axios.post(url, {\r\n            \"customername\": newOrder.name,\r\n            \"dish\": newOrder.dish,\r\n            \"price\": parseFloat(newOrder.price),\r\n            \"chef\": newOrder.chef\r\n            \r\n        }).then(response => {\r\n            if(response.status === 200){\r\n                setRefreshData(true)\r\n            }\r\n        })\r\n    }\r\n\r\n    //gets all the orders\r\n    function getAllMenuItems(){\r\n        var url = \"http://localhost:3000/menu\"\r\n        axios.get(url, {\r\n            responseType: 'json'\r\n        }).then(response => {\r\n            if(response.status === 200){\r\n                setMenu(response.data)\r\n            }\r\n        })\r\n    }\r\n    function getAllOrders(){\r\n        var url = \"http://localhost:3000/orders\"\r\n        axios.get(url, {\r\n            responseType: 'json'\r\n        }).then(response => {\r\n            if(response.status === 200){\r\n                setOrders(response.data)\r\n            }\r\n        })\r\n    }\r\n\r\n    //deletes a single order\r\n    function deleteSingleOrder(id){\r\n        var url = \"http://localhost:3000/order/delete/\" + id\r\n        axios.delete(url, {\r\n\r\n        }).then(response => {\r\n            if(response.status === 200){\r\n                setRefreshData(true)\r\n            }\r\n        })\r\n    }\r\n\r\n}\r\n\r\nexport default Orders"]},"metadata":{},"sourceType":"module"}